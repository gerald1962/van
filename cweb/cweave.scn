\I\X200:Append a \TEX/ string, without forming a scrap\X
\U196.
\I\X199:Append a string or constant\X
\U196.
\I\X196:Append the scrap appropriate to \PB{\\{next\_control}}\X
\U193.
\I\X176:Cases for \PB{\\{alignas\_like}}\X
\U121.
\I\X178:Cases for \PB{\\{attr\_head}}\X
\U121.
\I\X179:Cases for \PB{\\{attr}}\X
\U121.
\I\X140:Cases for \PB{\\{base}}\X
\U121.
\I\X132:Cases for \PB{\\{binop}}\X
\U121.
\I\X152:Cases for \PB{\\{case\_like}}\X
\U121.
\I\X133:Cases for \PB{\\{cast}}\X
\U121.
\I\X153:Cases for \PB{\\{catch\_like}}\X
\U121.
\I\X137:Cases for \PB{\\{colcol}}\X
\U121.
\I\X170:Cases for \PB{\\{const\_like}}\X
\U121.
\I\X138:Cases for \PB{\\{decl\_head}}\X
\U121.
\I\X139:Cases for \PB{\\{decl}}\X
\U121.
\I\X180:Cases for \PB{\\{default\_like}}\X
\U121.
\I\X174:Cases for \PB{\\{delete\_like}}\X
\U121.
\I\X151:Cases for \PB{\\{do\_like}}\X
\U121.
\I\X148:Cases for \PB{\\{else\_head}}\X
\U121.
\I\X147:Cases for \PB{\\{else\_like}}\X
\U121.
\I\X128:Cases for \PB{\\{exp}}\X
\U121.
\I\X143:Cases for \PB{\\{fn\_decl}}\X
\U121.
\I\X168:Cases for \PB{\\{for\_like}}\X
\U121.
\I\X167:Cases for \PB{\\{ftemplate}}\X
\U121.
\I\X144:Cases for \PB{\\{function}}\X
\U121.
\I\X149:Cases for \PB{\\{if\_clause}}\X
\U121.
\I\X150:Cases for \PB{\\{if\_head}}\X
\U121.
\I\X146:Cases for \PB{\\{if\_like}}\X
\U121.
\I\X160:Cases for \PB{\\{insert}}\X
\U121.
\I\X135:Cases for \PB{\\{int\_like}}\X
\U121.
\I\X163:Cases for \PB{\\{langle}}\X
\U121.
\I\X145:Cases for \PB{\\{lbrace}}\X
\U121.
\I\X177:Cases for \PB{\\{lbrack}}\X
\U121.
\I\X129:Cases for \PB{\\{lpar}}\X
\U121.
\I\X158:Cases for \PB{\\{lproc}}\X
\U121.
\I\X166:Cases for \PB{\\{new\_exp}}\X
\U121.
\I\X165:Cases for \PB{\\{new\_like}}\X
\U121.
\I\X172:Cases for \PB{\\{operator\_like}}\X
\U121.
\I\X161:Cases for \PB{\\{prelangle}}\X
\U121.
\I\X162:Cases for \PB{\\{prerangle}}\X
\U121.
\I\X136:Cases for \PB{\\{public\_like}}\X
\U121.
\I\X175:Cases for \PB{\\{question}}\X
\U121.
\I\X171:Cases for \PB{\\{raw\_int}}\X
\U121.
\I\X169:Cases for \PB{\\{raw\_ubin}}\X
\U121.
\I\X159:Cases for \PB{\\{section\_scrap}}\X
\U121.
\I\X157:Cases for \PB{\\{semi}}\X
\U121.
\I\X134:Cases for \PB{\\{sizeof\_like}}\X
\U121.
\I\X156:Cases for \PB{\\{stmt}}\X
\U121.
\I\X142:Cases for \PB{\\{struct\_head}}\X
\U121.
\I\X141:Cases for \PB{\\{struct\_like}}\X
\U121.
\I\X154:Cases for \PB{\\{tag}}\X
\U121.
\I\X164:Cases for \PB{\\{template\_like}}\X
\U121.
\I\X173:Cases for \PB{\\{typedef\_like}}\X
\U121.
\I\X131:Cases for \PB{\\{ubinop}}\X
\U121.
\I\X130:Cases for \PB{\\{unop}}\X
\U121.
\I\X198:Cases involving nonstandard characters\X
\U196.
\I\X102:Check for end of comment\X
\U101.
\I\X49:Check if next token is \PB{\&{include}}\X
\U47.
\I\X50:Check if we're at the end of a preprocessor command\X
\U44.
\I\X240:Check that `\.{=}' or `\.{==}' follows this section name, and emit the
scraps to start the section definition\X
\U239.
\I\X104:Clear \PB{\\{bal}} and \PB{\&{return}}\X
\U101.
\I\X190:Combine the irreducible scraps that remain\X
\U188.
\I\X3, 5, 6, 7, 9, 10, 12, 14, 15:Common code for \.{CWEAVE} and \.{CTANGLE}\X
\U1.
\I\X51:Compress two-symbol operator\X
\U44.
\I\X226:Copy a quoted character into the buffer\X
\U225.
\I\X103:Copy special things when \PB{$\|c\E\.{'@'},\.{'\\\\'}$}\X
\U101.
\I\X225:Copy the \CEE/ text into the \PB{\\{buffer}} array\X
\U223.
\I\X252:Do the first pass of sorting\X
\U247.
\I\X241:Emit the scrap for a section name if present\X
\U239.
\I\X55:Get a binary constant\X
\U53.
\I\X53:Get a constant\X
\U44.
\I\X54:Get a hexadecimal constant\X
\U53.
\I\X57:Get a string\X
\Us44\ET59.
\I\X58:Get a wide character constant\X
\U57.
\I\X52:Get an identifier\X
\U44.
\I\X56:Get an octal constant\X
\U53.
\I\X59:Get control code and possible section name\X
\U44.
\I\X63:If end of name or erroneous control code, \PB{\&{break}}\X
\U62.
\I\X191:If semi-tracing, show the irreducible scraps\X
\U190.
\I\X192:If tracing, print an indication of where we are\X
\U188.
\I\X4:Include files\X
\U1.
\I\X127:Insert new cross-reference at \PB{\|q}, not at beginning of list\X
\U126.
\I\X266:Invert the cross-reference list at \PB{\\{cur\_name}}, making \PB{%
\\{cur\_xref}} the head\X
\U264.
\I\X220:Look ahead for strongest line break, \PB{\&{goto} \\{reswitch}}\X
\U219.
\I\X197:Make sure that there is room for the new scraps, tokens, and texts\X
\Us196\ET205.
\I\X185:Make sure the entries \PB{\\{pp}} through \PB{$\\{pp}+\T{3}$} of \PB{%
\\{cat}} are defined\X
\U184.
\I\X121:Match a production at \PB{\\{pp}}, or increase \PB{\\{pp}} if there is
no match\X
\U184.
\I\X219:Output a control, look ahead in case of line breaks, possibly \PB{%
\&{goto} \\{reswitch}}\X
\U217.
\I\X222:Output a section name\X
\U217.
\I\X269:Output all the section names\X
\U247.
\I\X245:Output all the section numbers on the reference list \PB{\\{cur\_xref}}%
\X
\U243.
\I\X218:Output an identifier\X
\U217.
\I\X262:Output index entries for the list at \PB{\\{sort\_ptr}}\X
\U260.
\I\X221:Output saved \PB{\\{indent}} or \PB{\\{outdent}} tokens\X
\Us217\ET220.
\I\X231:Output the code for the beginning of a new section\X
\U230.
\I\X246:Output the code for the end of a section\X
\U230.
\I\X264:Output the cross-references at \PB{\\{cur\_name}}\X
\U262.
\I\X263:Output the name at \PB{\\{cur\_name}}\X
\U262.
\I\X223:Output the text of the section name\X
\U222.
\I\X8, 11, 13, 16, 25, 40, 45, 65, 69, 71, 83, 86, 90, 95, 98, 116, 118, 122,
181, 189, 194, 201, 210, 214, 228, 235, 244, 248, 259, 268:Predeclaration of
procedures\X
\U1.
\I\X187:Print a snapshot of the scrap list if debugging\X
\U182.
\I\X84:Print error messages about unused or undefined section names\X
\U68.
\I\X117:Print token \PB{\|r} in symbolic form\X
\U115.
\I\X94:Print warning message, break the line, \PB{\&{return}}\X
\U93.
\I\X21, 23, 30, 37, 43, 46, 48, 67, 76, 81, 85, 106, 113, 119, 186, 208, 213,
229, 238, 249, 251, 254, 256, 265:Private variables\X
\U1.
\I\X78:Process a format definition\X
\U77.
\I\X79:Process simple format in limbo\X
\U41.
\I\X62:Put section name into \PB{\\{section\_text}}\X
\U60.
\I\X47:Raise preprocessor flag\X
\U44.
\I\X184:Reduce the scraps using the productions until no more rules apply\X
\U188.
\I\X75:Replace `\.{@@}' by `\.{@}'\X
\Us72\ET74.
\I\X253:Rest of \PB{\\{trans\_plus}} union\X
\U112.
\I\X66:Scan a verbatim string\X
\U59.
\I\X60:Scan the section name and make \PB{\\{cur\_section}} point to it\X
\U59.
\I\X24, 31, 38, 61, 92, 107, 114, 155, 204, 209, 255, 257:Set initial values\X
\U2.
\I\X242:Show cross-references to this section\X
\U230.
\I\X224:Skip next character, give error if not `\.{@}'\X
\U223.
\I\X260:Sort and output the index\X
\U247.
\I\X39:Special control codes for debugging\X
\U38.
\I\X261:Split the list at \PB{\\{sort\_ptr}} into further lists\X
\U260.
\I\X89:Start \TEX/ output\X
\U2.
\I\X237:Start a format definition\X
\U233.
\I\X236:Start a macro definition\X
\U233.
\I\X34:Store all the reserved words\X
\U2.
\I\X70:Store cross-reference data for the current section\X
\U68.
\I\X80:Store cross-references in the \CEE/ part of a section\X
\U70.
\I\X74:Store cross-references in the \TEX/ part of a section\X
\U70.
\I\X77:Store cross-references in the definition part of a section\X
\U70.
\I\X250:Tell about changed sections\X
\U247.
\I\X239:Translate the \CEE/ part of the current section\X
\U230.
\I\X232:Translate the \TEX/ part of the current section\X
\U230.
\I\X230:Translate the current section\X
\U227.
\I\X233:Translate the definition part of the current section\X
\U230.
\I\X22, 29, 112, 207:Typedef declarations\X
\U1.
